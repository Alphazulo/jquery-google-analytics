h1. jQuery Google Analytics Plugin

h2. Introduction

A jQuery plugin that simplifies event and link tracking.

Features:

* Easy and extensible event and link tracking plugin for jQuery and Google Analytics
* Automatic internal/external link detection. Default behavior is to skip tracking of internal links.
* Configurable: skip internal link tracking, metadata extraction using callbacks.
* Enforces that tracking event handler is added only once.

h2. Installation

h3. JavaScript

Inside the head tag, first include the jQuery JavaScript file, then the jQuery Google Analytics file:

<pre>
  <code>
    <script type="text/javascript" src="javascripts/jquery.js"></script>
    <script type="text/javascript" src="javascripts/jquery.google-analytics.js"></script>
  </code>
</pre>

You now have access to two new methods:

* track - Used in combination with jQuery selectors to add click tracking to matching elements. For example: $('selector').track() 
* trackEvent - Same as _pageTracker.trackEvent, but checks that analytics isn't blocked by user. For example: $.trackEvent('category', 'action', 'label')

h3. Usage

Use jQuery selectors (and the track function) to select the elements you want to track, as shown in the example below.

<pre>
  <code>
	<script type="text/javascript">
	$(document).ready(function(){
    $('.normal a').track();

    $('.sidebar a').track({
			category : 'sidebar'
		});

		$('.footer a').track({
			category : 'footer'
		});

		// Support any markup you want, eg. http://microformats.org/wiki/xFolk
		$('.complex a').track({
			// Use class as category. " tracked" is added by plugin...
			category : function(element) { return element.attr('class').replace(' tracked', '') }
		});
	});
	</script>
  </code>
</pre>

The first example selects links in the sidebar and sets the category to 'sidebar'.

The second example selects links in the footer and sets the category to 'footer'.

The third example selects links located inside the "complex div" and uses the link's class as category.

See index.html for complete examples.

h2. Parameters

The track method accepts the following arguments:

* "category":http://code.google.com/apis/analytics/docs/eventTrackerGuide.html#Categories - required string used to group events. Default is autodetected: internal or external.
* "action":http://code.google.com/apis/analytics/docs/eventTrackerGuide.html#Actions - required string used to define event type, eg. click, download. Default is click.
* "label":http://code.google.com/apis/analytics/docs/eventTrackerGuide.html#Labels - optional label to attach to event, eg. buy. Default is href attribute's value.
* "value":http://code.google.com/apis/analytics/docs/eventTrackerGuide.html#Values - optional numerical value to attach to event, eg. price. Default null.

In addition to the earlier mentioned arguments, you can also specify these:

* skip_internal - Default true. If true then internal links are not tracked.

The following snippet shows you how to define the parameters:

<pre>
  <code>
	<script type="text/javascript">
	$(document).ready(function(){
		$('.sidebar a').track({
			category : 'sidebar',
			action   : 'click',
			label    : 'buy',
			value    : '10.49'
		});
	});
	</script>
  </code>
</pre>

If no parameters are given then sensible defaults are used, which should work in most cases.

Note that you can also use functions instead of string values. Functions are useful for extracting the values from the HTML itself (metadata).

h2. Author

"Christian Hellsten":http://christianhellsten.com ("Aktagon Ltd.":http://aktagon.com)

